{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\Kool_robert\\\\icd0009-2019s\\\\EXAM\\\\exam-react\\\\src\\\\components\\\\views\\\\subject\\\\StudentIndex.tsx\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { AppContext } from \"../../../context/AppContext\";\nimport { BaseService } from \"../../../base/BaseService\";\nimport jwt_decode from \"jwt-decode\";\nimport { Link } from \"react-router-dom\";\n\nconst SubjectIndexStudent = () => {\n  const [state, setState] = useState({\n    subjects: [],\n    subjectsCopy: [],\n    year: 0,\n    semester: ''\n  });\n  const appContext = useContext(AppContext);\n\n  const data = async () => await BaseService.getEntities('subjects/getstudentsubjects/' + jwt_decode(appContext.jwt)['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'], appContext.jwt).then(data => setState({ ...state,\n    subjects: data,\n    subjectsCopy: data\n  }));\n\n  useEffect(() => {\n    data();\n  }, []);\n\n  function averageGrade() {\n    let sum = 0;\n    let studentsubjects = state.subjectsCopy.filter(s => s.grade != null);\n    studentsubjects.forEach(element => {\n      sum += parseFloat(element.grade);\n    });\n    return sum / studentsubjects.length;\n  }\n\n  function handleChange(e) {\n    setState({ ...state,\n      [e.name]: e.value\n    });\n  }\n\n  function handleSubmit() {\n    if (state.year == 0) {\n      setState({ ...state,\n        subjectsCopy: state.subjects.filter(s => {\n          var _s$subject;\n\n          return (_s$subject = s.subject) === null || _s$subject === void 0 ? void 0 : _s$subject.semester.includes(state.semester);\n        })\n      });\n    } else {\n      setState({ ...state,\n        subjectsCopy: state.subjects.filter(s => {\n          var _s$subject2;\n\n          return ((_s$subject2 = s.subject) === null || _s$subject2 === void 0 ? void 0 : _s$subject2.semester.includes(state.semester)) && s.subject.year == state.year;\n        })\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingLeft: \"100px\",\n      paddingRight: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"My subjects\"), \"Choose semester \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"semester\",\n    value: state.semester,\n    onChange: e => handleChange(e.target),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Both\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Spring\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Spring\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Autumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Autumn\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 14\n    }\n  }), \"Choose year (set to 0 to disable)\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"year\",\n    value: state.year,\n    type: \"number\",\n    min: 0,\n    max: 5000,\n    onChange: e => handleChange(e.target),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Code\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"ECTS\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Semester\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Year\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Grade\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, state.subjectsCopy.map(s => /*#__PURE__*/React.createElement(\"tr\", {\n    key: s.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, s.subject.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, s.subject.code), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, s.subject.ects), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, s.subject.semester), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, s.subject.year), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, s.grade), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: '/hwstudentindex/' + s.subject.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, \"Homeworks\")))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 5,\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, \"Average grade: \")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, \" \", averageGrade(), \" out of 5\"))))));\n};\n\nexport default SubjectIndexStudent;","map":{"version":3,"sources":["C:/Users/rober/Documents/Kool_robert/icd0009-2019s/EXAM/exam-react/src/components/views/subject/StudentIndex.tsx"],"names":["React","useState","useContext","useEffect","AppContext","BaseService","jwt_decode","Link","SubjectIndexStudent","state","setState","subjects","subjectsCopy","year","semester","appContext","data","getEntities","jwt","then","averageGrade","sum","studentsubjects","filter","s","grade","forEach","element","parseFloat","length","handleChange","e","name","value","handleSubmit","subject","includes","paddingLeft","paddingRight","target","map","id","code","ects","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport { BaseService } from \"../../../base/BaseService\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { IStudentSubject } from \"../../../domain/IStudentSubjectDTO\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface IState {\r\n    subjects: IStudentSubject[];\r\n    subjectsCopy: IStudentSubject[];\r\n    year: number;\r\n    semester: string;\r\n}\r\n\r\nconst SubjectIndexStudent = () => {\r\n\r\n    const [state, setState] = useState({subjects: [], subjectsCopy: [], year: 0, semester: ''} as IState);\r\n    const appContext = useContext(AppContext);\r\n    const data = async () => await BaseService\r\n        .getEntities<IStudentSubject>('subjects/getstudentsubjects/' + jwt_decode<any>(appContext.jwt!)['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'], appContext.jwt!)\r\n        .then(data => setState({...state, subjects: data, subjectsCopy: data}));\r\n\r\n    useEffect(() => {\r\n        data();\r\n    }, []);\r\n\r\n    function averageGrade() {\r\n        let sum = 0;\r\n       let studentsubjects =  state.subjectsCopy.filter(s => s.grade != null);\r\n       studentsubjects.forEach(element => {\r\n           sum += parseFloat(element.grade!)\r\n       });\r\n\r\n       return sum / studentsubjects.length;\r\n    }\r\n\r\n    function handleChange(e: EventTarget & HTMLSelectElement | EventTarget & HTMLInputElement) {\r\n        setState({...state, [e.name]: e.value})\r\n    }\r\n\r\n    function handleSubmit() {\r\n        if (state.year == 0) {\r\n            setState({...state, subjectsCopy: state.subjects.filter(s => s.subject?.semester.includes(state.semester))})\r\n        } else {\r\n            setState({...state, subjectsCopy: state.subjects.filter(s => s.subject?.semester.includes(state.semester) && s.subject.year == state.year)})\r\n        }\r\n    }\r\n\r\n    return (<div style={{ paddingLeft: \"100px\", paddingRight: \"100px\" }}>\r\n        <h1>My subjects</h1>\r\n        \r\n        Choose semester <br/>\r\n        <select name=\"semester\" value={state.semester} onChange={(e) => handleChange(e.target)}>\r\n            <option value=\"\">Both</option>\r\n            <option value=\"Spring\">Spring</option>\r\n            <option value=\"Autumn\">Autumn</option>\r\n        </select>\r\n        <br/><br/>\r\n        Choose year (set to 0 to disable)\r\n        <br/>\r\n        <input name=\"year\" value={state.year} type=\"number\" min={0} max={5000} onChange={(e) => handleChange(e.target)} />\r\n        <br/>\r\n        <button onClick={() => handleSubmit()}>Search</button>\r\n\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        Name\r\n                    </th>\r\n                    <th>\r\n                        Code\r\n                    </th>\r\n                    <th>\r\n                        ECTS\r\n                    </th>\r\n                    <th>\r\n                        Semester\r\n                    </th>\r\n                    <th>\r\n                        Year\r\n                    </th>\r\n                    <th>\r\n                        Grade\r\n                    </th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {state.subjectsCopy.map(s => (\r\n\r\n                    <tr key={s.id}>\r\n                        <td>\r\n                            {s.subject!.name}\r\n                        </td>\r\n                        <td>\r\n                            {s.subject!.code}\r\n                        </td>\r\n                        <td>\r\n                            {s.subject!.ects}\r\n                        </td>\r\n                        <td>\r\n                            {s.subject!.semester}\r\n                        </td>\r\n                        <td>\r\n                            {s.subject!.year}\r\n                        </td>\r\n                        <td>\r\n                            {s.grade}\r\n                        </td>\r\n                        <th>\r\n                            <Link to={'/hwstudentindex/' + s.subject!.id} >Homeworks</Link>\r\n                        </th>\r\n                    </tr>\r\n                ))}\r\n                <tr>\r\n                    <td colSpan={5} style={{textAlign: \"right\"}}>\r\n                        <b>Average grade: </b>\r\n                    </td>\r\n                    <td>\r\n                        <b> {averageGrade()} out of 5</b>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>);\r\n}\r\n\r\nexport default SubjectIndexStudent;"]},"metadata":{},"sourceType":"module"}