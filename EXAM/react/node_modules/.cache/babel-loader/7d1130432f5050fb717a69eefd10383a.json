{"ast":null,"code":"var _jsxFileName = \"D:\\\\icd0009-2019s\\\\Exam2019s\\\\exam-react\\\\src\\\\components\\\\views\\\\studenthomeworks\\\\TeacherIndex.tsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { BaseCrudService } from \"../../../base/BaseCrudService\";\nimport { AppContext } from \"../../../context/AppContext\";\n\nconst StudentHwTeacherIndex = () => {\n  let {\n    id\n  } = useParams();\n  const appContext = useContext(AppContext);\n  const [items, setItems] = useState([]);\n\n  const data = async () => await BaseCrudService.getEntities('studenthomeworks/teacherindex/' + id, appContext.jwt).then(data => setItems(data));\n\n  useEffect(() => {\n    data();\n  }, []);\n\n  function averageGrade() {\n    let sum = 0;\n    let studentsubjects = items.filter(s => s.grade != null);\n    studentsubjects.forEach(element => {\n      sum += parseFloat(element.grade);\n    });\n    return sum / studentsubjects.length;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Student Homeworks\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Student\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Grade\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, items.map(i => {\n    var _i$appUser, _i$appUser2;\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: i.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, ((_i$appUser = i.appUser) === null || _i$appUser === void 0 ? void 0 : _i$appUser.firstName) + \" \" + ((_i$appUser2 = i.appUser) === null || _i$appUser2 === void 0 ? void 0 : _i$appUser2.lastName)), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, i.grade), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: '/studenthwdetails/' + i.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, \"Details\")));\n  }), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 3,\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"Average: \")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \" \", averageGrade(), \" out of 5\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 3,\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, \"Not graded students count: \")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, \" \", items.filter(ss => ss.grade == null).length, \" (\", items.filter(ss => ss.grade == null).length / items.length * 100, \"%)\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 3,\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, \"Passed students: \")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, \" \", items.filter(ss => ss.grade != null && parseInt(ss.grade) > 0).length, \" (\", items.filter(ss => ss.grade != null && parseInt(ss.grade) > 0).length / items.length * 100, \"%)\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 3,\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, \"Failed students: \")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, items.filter(ss => ss.grade != null && parseInt(ss.grade) == 0).length, \" (\", items.filter(ss => ss.grade != null && parseInt(ss.grade) == 0).length / items.length * 100, \"%)\"))))));\n};\n\nexport default StudentHwTeacherIndex;","map":{"version":3,"sources":["D:/icd0009-2019s/Exam2019s/exam-react/src/components/views/studenthomeworks/TeacherIndex.tsx"],"names":["React","useState","useEffect","useContext","useParams","Link","BaseCrudService","AppContext","StudentHwTeacherIndex","id","appContext","items","setItems","data","getEntities","jwt","then","averageGrade","sum","studentsubjects","filter","s","grade","forEach","element","parseFloat","length","map","i","appUser","firstName","lastName","textAlign","ss","parseInt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { IHomeworkDTO } from \"../../../domain/IHomeworkDTO\";\r\nimport { BaseCrudService } from \"../../../base/BaseCrudService\";\r\nimport { IStudentHomework } from \"../../../domain/IStudentHomework\";\r\nimport { AppContext } from \"../../../context/AppContext\";\r\n\r\nconst StudentHwTeacherIndex = () => {\r\n    let { id } = useParams();\r\n    const appContext = useContext(AppContext);\r\n\r\n    const [items, setItems] = useState([] as IStudentHomework[]);\r\n    const data = async () => await BaseCrudService\r\n        .getEntities<IStudentHomework>('studenthomeworks/teacherindex/' + id, appContext.jwt!)\r\n        .then(data => setItems(data));\r\n\r\n    useEffect(() => {\r\n        data();\r\n    }, []);\r\n\r\n    function averageGrade() {\r\n        let sum = 0;\r\n        let studentsubjects = items.filter(s => s.grade != null);\r\n        studentsubjects.forEach(element => {\r\n            sum += parseFloat(element.grade!)\r\n        });\r\n\r\n        return sum / studentsubjects.length;\r\n    }\r\n\r\n    return (<>\r\n        <h1>Student Homeworks</h1>\r\n\r\n\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        Student\r\n            </th>\r\n                    <th>\r\n                        Grade\r\n            </th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {items.map(i => (\r\n                    <tr key={i.id}>\r\n                        <td>\r\n                            {i.appUser?.firstName + \" \" + i.appUser?.lastName}\r\n                        </td>\r\n                        <th>\r\n                            {i.grade}\r\n                        </th>\r\n                        <td>\r\n                            <Link to={'/studenthwdetails/' + i.id}>Details</Link>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n                <tr>\r\n                    <td colSpan={3} style={{ textAlign: \"right\" }}>\r\n                        <b>Average: </b>\r\n                    </td>\r\n                    <td>\r\n                        <b> {averageGrade()} out of 5</b>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan={3} style={{ textAlign: \"right\" }}>\r\n                        <b>Not graded students count: </b>\r\n                    </td>\r\n                    <td>\r\n                        <b> {items.filter(ss => ss.grade == null).length} ({items.filter(ss => ss.grade == null).length / items.length * 100}%)</b>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan={3} style={{ textAlign: \"right\" }}>\r\n                        <b>Passed students: </b>\r\n                    </td>\r\n                    <td>\r\n                        <b> {items.filter(ss => ss.grade != null && parseInt(ss.grade) > 0).length} ({items.filter(ss => ss.grade != null && parseInt(ss.grade) > 0).length / items.length * 100}%)</b>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan={3} style={{ textAlign: \"right\" }}>\r\n                        <b>Failed students: </b>\r\n                    </td>\r\n                    <td>\r\n                        <b>{items.filter(ss => ss.grade != null && parseInt(ss.grade) == 0).length} ({items.filter(ss => ss.grade != null && parseInt(ss.grade) == 0).length / items.length * 100}%)</b>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </>)\r\n}\r\n\r\nexport default StudentHwTeacherIndex;"]},"metadata":{},"sourceType":"module"}