{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\test-app\\\\exam-react\\\\src\\\\components\\\\views\\\\studentsubject\\\\Index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { BaseCrudService } from \"../../../base/BaseCrudService\";\nimport { useParams } from \"react-router-dom\";\n\nconst StudentSubjectIndex = () => {\n  const [studentSubjects, setStudentSubjects] = useState([]);\n  let {\n    subjectid\n  } = useParams();\n\n  const data = async () => {\n    await BaseCrudService.getEntities('studentsubject/getstudentsubjects/' + subjectid).then(data => setStudentSubjects(data));\n  };\n\n  useEffect(() => {\n    data();\n  }, [studentSubjects.length]);\n\n  function processRequest(item, status) {\n    item.accepted = status;\n    let id = item.id;\n\n    const callChange = async () => await BaseCrudService.updateEntity(item, 'studentsubject/putstudentsubject/' + {\n      id\n    });\n\n    callChange();\n    data();\n  }\n\n  function enrollStatus(item) {\n    if (item.accepted != null || item.accepted != undefined) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, item.accepted);\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => processRequest(item, true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"Accept\"), /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => processRequest(item, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"Deny\"));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Students list\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Student\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Subject\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Accepted\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Grade\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, studentSubjects.map(ss => {\n    var _ss$appUser, _ss$appUser2, _ss$subject;\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      ket: ss.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, ((_ss$appUser = ss.appUser) === null || _ss$appUser === void 0 ? void 0 : _ss$appUser.firstName) + \" \" + ((_ss$appUser2 = ss.appUser) === null || _ss$appUser2 === void 0 ? void 0 : _ss$appUser2.lastName)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, (_ss$subject = ss.subject) === null || _ss$subject === void 0 ? void 0 : _ss$subject.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, enrollStatus(ss)), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        display: \"inlineBlock\",\n        whiteSpace: \"nowrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, \"grade form here\"));\n  }))));\n};\n\nexport default StudentSubjectIndex;","map":{"version":3,"sources":["D:/Downloads/test-app/exam-react/src/components/views/studentsubject/Index.tsx"],"names":["React","useState","useEffect","BaseCrudService","useParams","StudentSubjectIndex","studentSubjects","setStudentSubjects","subjectid","data","getEntities","then","length","processRequest","item","status","accepted","id","callChange","updateEntity","enrollStatus","undefined","map","ss","appUser","firstName","lastName","subject","name","display","whiteSpace"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { IStudentSubject } from \"../../../domain/IStudentSubjectDTO\";\r\nimport { BaseCrudService } from \"../../../base/BaseCrudService\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst StudentSubjectIndex = () => {\r\n    const [studentSubjects, setStudentSubjects] = useState([] as IStudentSubject[]);\r\n    let { subjectid } = useParams();\r\n    const data = async () => {\r\n        await BaseCrudService\r\n        .getEntities<IStudentSubject>('studentsubject/getstudentsubjects/' + subjectid)\r\n        .then(data => setStudentSubjects(data));}\r\n\r\n    useEffect(() => {\r\n        data();\r\n    }, [studentSubjects.length]);\r\n\r\n    function processRequest(item: IStudentSubject, status: boolean) {\r\n        item.accepted = status;\r\n        let id = item.id\r\n        const callChange = async () => await BaseCrudService.updateEntity<IStudentSubject>(item, 'studentsubject/putstudentsubject/' + {id} );\r\n        callChange();\r\n        data();\r\n    }\r\n\r\n    function enrollStatus(item: IStudentSubject) {\r\n        \r\n        if (item.accepted != null || item.accepted != undefined) {\r\n        return (<>{item.accepted}</>);\r\n        }\r\n\r\n        return (<>\r\n                <a onClick={() => processRequest(item, true)} >Accept</a>\r\n                <a onClick={() => processRequest(item, false)}>Deny</a>\r\n        </>);\r\n    }\r\n\r\n    return (<>\r\n        <h1>Students list</h1>\r\n\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        Student\r\n        </th>\r\n                    <th>\r\n                        Subject\r\n        </th>\r\n                    <th>\r\n                        Accepted\r\n        </th>\r\n                    <th>\r\n                        Grade\r\n        </th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {studentSubjects.map(ss => (\r\n\r\n                    <tr ket={ss.id}>\r\n                        <td>\r\n                            {ss.appUser?.firstName + \" \" + ss.appUser?.lastName}\r\n                        </td>\r\n                        <td>\r\n                            {ss.subject?.name}\r\n                        </td>\r\n                        <td>\r\n                            {enrollStatus(ss)}\r\n                        </td>\r\n                        <td style={{display: \"inlineBlock\", whiteSpace: \"nowrap\"}}>\r\n                            {/* @if (item.Accepted == true)\r\n                {\r\n                                <partial name=\"GradeFormPartial\" model=\"@item\" />\r\n                            } */}\r\n                            grade form here\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    </>);\r\n}\r\n\r\nexport default StudentSubjectIndex;"]},"metadata":{},"sourceType":"module"}