{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\test-app\\\\exam-react\\\\src\\\\components\\\\views\\\\studentsubject\\\\Index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { BaseCrudService } from \"../../../base/BaseCrudService\";\nimport { useParams } from \"react-router-dom\";\n\nconst StudentSubjectIndex = () => {\n  const [state, setItem] = useState([]);\n  let {\n    subjectid\n  } = useParams();\n\n  const data = async () => {\n    await BaseCrudService.getEntities('studentsubject/getstudentsubjects/' + subjectid).then(data => setItem(data));\n  };\n\n  let grades = [];\n  useEffect(() => {\n    data().then(() => {\n      state.forEach((element, index) => {\n        grades.length = state.length;\n        grades[index] = element.grade;\n      });\n    });\n    console.log(grades);\n  }, [state.length]);\n\n  function processRequest(item, status) {\n    item.accepted = status;\n\n    const callChange = async () => await BaseCrudService.updateEntity(item, 'studentsubject/putstudentsubject');\n\n    callChange();\n    data();\n  }\n\n  function enrollStatus(item) {\n    if (item.accepted != null || item.accepted != undefined) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, item.accepted ? 'Yes' : 'No');\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => processRequest(item, true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"Accept\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => processRequest(item, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"Deny\"));\n  }\n\n  function updateGrade(item) {\n    const callChange = async () => await BaseCrudService.updateEntity(item, 'studentsubject/putstudentsubject');\n\n    callChange();\n    data();\n  }\n\n  function handleChange(target, index) {\n    grades[index] = target.value;\n    console.log(grades);\n  }\n\n  function grade(index) {\n    if (state[index].accepted == null || state[index].accepted == undefined) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, \"None\");\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"inlineBlock\",\n        whiteSpace: \"nowrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: grades[index],\n      onChange: e => handleChange(e.target, index),\n      min: \"0\",\n      max: \"5\",\n      className: \"form-control\",\n      name: \"grade\",\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => updateGrade(state[index]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Save\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Students list\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Student\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"Subject\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"Accepted\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Grade\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, state.map((ss, index) => {\n    var _ss$appUser, _ss$appUser2, _ss$subject;\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: ss.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, ((_ss$appUser = ss.appUser) === null || _ss$appUser === void 0 ? void 0 : _ss$appUser.firstName) + \" \" + ((_ss$appUser2 = ss.appUser) === null || _ss$appUser2 === void 0 ? void 0 : _ss$appUser2.lastName)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, (_ss$subject = ss.subject) === null || _ss$subject === void 0 ? void 0 : _ss$subject.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, enrollStatus(ss)), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        display: \"inlineBlock\",\n        whiteSpace: \"nowrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, grade(index)));\n  }))));\n};\n\nexport default StudentSubjectIndex;","map":{"version":3,"sources":["D:/Downloads/test-app/exam-react/src/components/views/studentsubject/Index.tsx"],"names":["React","useState","useEffect","BaseCrudService","useParams","StudentSubjectIndex","state","setItem","subjectid","data","getEntities","then","grades","forEach","element","index","length","grade","console","log","processRequest","item","status","accepted","callChange","updateEntity","enrollStatus","undefined","updateGrade","handleChange","target","value","display","whiteSpace","e","map","ss","id","appUser","firstName","lastName","subject","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { IStudentSubject } from \"../../../domain/IStudentSubjectDTO\";\r\nimport { BaseCrudService } from \"../../../base/BaseCrudService\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst StudentSubjectIndex = () => {\r\n    const [state, setItem] = useState([] as IStudentSubject[]);\r\n    let { subjectid } = useParams();\r\n    const data = async () => {\r\n        await BaseCrudService\r\n            .getEntities<IStudentSubject>('studentsubject/getstudentsubjects/' + subjectid)\r\n            .then(data => setItem(data));\r\n    }\r\n\r\n    let grades: any = [];\r\n\r\n    useEffect(() => {\r\n        data().then(() => {\r\n\r\n            state.forEach((element, index) => {\r\n                grades.length = state.length;\r\n                grades[index] = element.grade\r\n            });\r\n        });\r\n        console.log(grades)\r\n    }, [state.length]);\r\n\r\n    function processRequest(item: IStudentSubject, status: boolean) {\r\n        item.accepted = status;\r\n        const callChange = async () => await BaseCrudService.updateEntity<IStudentSubject>(item, 'studentsubject/putstudentsubject');\r\n        callChange();\r\n        data();\r\n    }\r\n\r\n    function enrollStatus(item: IStudentSubject) {\r\n\r\n        if (item.accepted != null || item.accepted != undefined) {\r\n            return (<>{item.accepted ? 'Yes' : 'No'}</>);\r\n        }\r\n\r\n        return (<>\r\n            <button onClick={() => processRequest(item, true)} >Accept</button>\r\n            <button onClick={() => processRequest(item, false)}>Deny</button>\r\n        </>);\r\n    }\r\n\r\n    \r\n    function updateGrade(item: IStudentSubject) {\r\n        const callChange = async () => await BaseCrudService.updateEntity<IStudentSubject>(item, 'studentsubject/putstudentsubject');\r\n        callChange();\r\n        data();\r\n    }\r\n\r\n    function handleChange(target: EventTarget & HTMLInputElement, index: number) {\r\n        grades[index] = target.value;\r\n        console.log(grades);\r\n    }\r\n    \r\n    function grade(index: number) {\r\n        \r\n        if (state[index].accepted == null || state[index].accepted == undefined) {\r\n            return (<>None</>)\r\n        }\r\n        return (<>\r\n\r\n            <div style={{display: \"inlineBlock\", whiteSpace: \"nowrap\"}}>\r\n                <input value={grades[index]} onChange={(e) => handleChange(e.target, index)} min=\"0\" max=\"5\" className=\"form-control\" name=\"grade\" type=\"number\" />\r\n                <button onClick={() => updateGrade(state[index])}>Save</button>\r\n            </div>\r\n        </>\r\n        );\r\n\r\n    }\r\n\r\n    return (<>\r\n        <h1>Students list</h1>\r\n\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        Student\r\n        </th>\r\n                    <th>\r\n                        Subject\r\n        </th>\r\n                    <th>\r\n                        Accepted\r\n        </th>\r\n                    <th>\r\n                        Grade\r\n        </th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {state.map((ss, index) => (\r\n\r\n                    <tr key={ss.id}>\r\n                        <td>\r\n                            {ss.appUser?.firstName + \" \" + ss.appUser?.lastName}\r\n                        </td>\r\n                        <td>\r\n                            {ss.subject?.name}\r\n                        </td>\r\n                        <td>\r\n                            {enrollStatus(ss)}\r\n                        </td>\r\n                        <td style={{ display: \"inlineBlock\", whiteSpace: \"nowrap\" }}>\r\n                            {grade(index)}\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    </>);\r\n}\r\n\r\nexport default StudentSubjectIndex;"]},"metadata":{},"sourceType":"module"}