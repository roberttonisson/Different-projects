{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\test-app\\\\exam-react\\\\src\\\\components\\\\views\\\\studentsubject\\\\Index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { BaseCrudService } from \"../../../base/BaseCrudService\";\nimport { useParams } from \"react-router-dom\";\n\nconst StudentSubjectIndex = () => {\n  const [state, setItem] = useState({});\n  let {\n    subjectid\n  } = useParams();\n\n  const data = async () => {\n    await BaseCrudService.getEntities('studentsubject/getstudentsubjects/' + subjectid).then(data => setItem({ ...state,\n      items: data\n    }));\n  };\n\n  useEffect(() => {\n    data();\n  }, [state.items.length]);\n\n  function processRequest(item, status) {\n    item.accepted = status;\n\n    const callChange = async () => await BaseCrudService.updateEntity(item, 'studentsubject/putstudentsubject');\n\n    callChange();\n    data();\n  }\n\n  function enrollStatus(item) {\n    if (item.accepted != null || item.accepted != undefined) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, item.accepted ? 'Yes' : 'No');\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => processRequest(item, true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"Accept\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => processRequest(item, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, \"Deny\"));\n  }\n  /* function updateGrade() {\r\n      const callChange = async () => await BaseCrudService.updateEntity<IStudentSubject>(item, 'studentsubject/putstudentsubject');\r\n      callChange();\r\n      data();\r\n  } */\n\n\n  function handleChange(target) {}\n\n  function grade(item) {\n    if (!item.accepted) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, \"None\");\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Students list\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Student\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Subject\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"Accepted\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"Grade\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, state.items.map(ss => {\n    var _ss$appUser, _ss$appUser2, _ss$subject;\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: ss.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, ((_ss$appUser = ss.appUser) === null || _ss$appUser === void 0 ? void 0 : _ss$appUser.firstName) + \" \" + ((_ss$appUser2 = ss.appUser) === null || _ss$appUser2 === void 0 ? void 0 : _ss$appUser2.lastName)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, (_ss$subject = ss.subject) === null || _ss$subject === void 0 ? void 0 : _ss$subject.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, enrollStatus(ss)), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        display: \"inlineBlock\",\n        whiteSpace: \"nowrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, grade(ss)));\n  }))));\n};\n\nexport default StudentSubjectIndex;","map":{"version":3,"sources":["D:/Downloads/test-app/exam-react/src/components/views/studentsubject/Index.tsx"],"names":["React","useState","useEffect","BaseCrudService","useParams","StudentSubjectIndex","state","setItem","subjectid","data","getEntities","then","items","length","processRequest","item","status","accepted","callChange","updateEntity","enrollStatus","undefined","handleChange","target","grade","map","ss","id","appUser","firstName","lastName","subject","name","display","whiteSpace"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { IStudentSubject } from \"../../../domain/IStudentSubjectDTO\";\r\nimport { BaseCrudService } from \"../../../base/BaseCrudService\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { stat } from \"fs\";\r\n\r\nexport interface IStudentSubjectIndexState{\r\n    items: IStudentSubject[],\r\n    item: IStudentSubject\r\n} \r\n\r\nconst StudentSubjectIndex = () => {\r\n    const [state, setItem] = useState({} as IStudentSubjectIndexState);\r\n    let { subjectid } = useParams();\r\n    const data = async () => {\r\n        await BaseCrudService\r\n            .getEntities<IStudentSubject>('studentsubject/getstudentsubjects/' + subjectid)\r\n            .then(data => setItem({...state, items: data}));\r\n    }\r\n\r\n    useEffect(() => {\r\n        data();\r\n        \r\n    }, [state.items.length]);\r\n\r\n    function processRequest(item: IStudentSubject, status: boolean) {\r\n        item.accepted = status;\r\n        const callChange = async () => await BaseCrudService.updateEntity<IStudentSubject>(item, 'studentsubject/putstudentsubject');\r\n        callChange();\r\n        data();\r\n    }\r\n\r\n    function enrollStatus(item: IStudentSubject) {\r\n\r\n        if (item.accepted != null || item.accepted != undefined) {\r\n            return (<>{item.accepted ? 'Yes' : 'No'}</>);\r\n        }\r\n\r\n        return (<>\r\n            <button onClick={() => processRequest(item, true)} >Accept</button>\r\n            <button onClick={() => processRequest(item, false)}>Deny</button>\r\n        </>);\r\n    }\r\n\r\n    \r\n    /* function updateGrade() {\r\n        const callChange = async () => await BaseCrudService.updateEntity<IStudentSubject>(item, 'studentsubject/putstudentsubject');\r\n        callChange();\r\n        data();\r\n    } */\r\n\r\n    function handleChange(target: EventTarget & HTMLInputElement) {\r\n    }\r\n    \r\n    function grade(item: IStudentSubject) {\r\n        \r\n        if (!item.accepted) {\r\n            return (<>None</>)\r\n        }\r\n\r\n        return (<>\r\n\r\n           {/*  <div style={{display: \"inlineBlock\", whiteSpace: \"nowrap\"}}>\r\n                <input value={item.grade} onChange={(e) => handleChange(e.target)} min=\"0\" max=\"5\" className=\"form-control\" name=\"grade\" type=\"number\" />\r\n                <button   onClick={() => updateGrade()}>Save</button>\r\n            </div> */}\r\n        </>\r\n        );\r\n\r\n    }\r\n\r\n    return (<>\r\n        <h1>Students list</h1>\r\n\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        Student\r\n        </th>\r\n                    <th>\r\n                        Subject\r\n        </th>\r\n                    <th>\r\n                        Accepted\r\n        </th>\r\n                    <th>\r\n                        Grade\r\n        </th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {state.items.map(ss => (\r\n\r\n                    <tr key={ss.id}>\r\n                        <td>\r\n                            {ss.appUser?.firstName + \" \" + ss.appUser?.lastName}\r\n                        </td>\r\n                        <td>\r\n                            {ss.subject?.name}\r\n                        </td>\r\n                        <td>\r\n                            {enrollStatus(ss)}\r\n                        </td>\r\n                        <td style={{ display: \"inlineBlock\", whiteSpace: \"nowrap\" }}>\r\n                            {grade(ss)}\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    </>);\r\n}\r\n\r\nexport default StudentSubjectIndex;"]},"metadata":{},"sourceType":"module"}