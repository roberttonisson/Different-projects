{"ast":null,"code":"var _jsxFileName = \"D:\\\\icd0009-2019s\\\\Exam2019s\\\\exam-react\\\\src\\\\components\\\\views\\\\subject\\\\SubjectIndex.tsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { BaseCrudService } from \"../../../base/BaseCrudService\";\nimport { AppContext } from \"../../../context/AppContext\";\nimport jwt_decode from \"jwt-decode\";\n\nconst SubjectIndex = () => {\n  const [subjects, setSubjects] = useState([]);\n  const appContext = useContext(AppContext);\n\n  const data = async () => await BaseCrudService.getEntities('subjects/getsubjects').then(data => setSubjects(data));\n\n  let dataCopy = [];\n  useEffect(() => {\n    data();\n  }, []);\n  useEffect(() => {\n    dataCopy = Object.assign(subjects);\n  }, [subjects.length]);\n  useEffect(() => {}, [dataCopy.length]);\n\n  async function enroll(subject, email) {\n    var user = {\n      email: email,\n      id: 'x',\n      firstName: '',\n      lastName: '',\n      code: ''\n    };\n    let dto = {\n      subject: subject,\n      appUser: user,\n      accepted: null,\n      id: ''\n    };\n    await BaseCrudService.createEntity(dto, 'StudentSubject/PostStudentSubject');\n    data();\n  }\n\n  function enrollOption(item) {\n    if (appContext.jwt == null) {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      });\n    } else {\n      var _item$studentSubjects, _item$studentSubjects2;\n\n      var subject = (_item$studentSubjects = (_item$studentSubjects2 = item.studentSubjects) === null || _item$studentSubjects2 === void 0 ? void 0 : _item$studentSubjects2.find(s => s != undefined && s.appUser != undefined && s.appUser.email == jwt_decode(appContext.jwt)['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'])) !== null && _item$studentSubjects !== void 0 ? _item$studentSubjects : null;\n\n      if (jwt_decode(appContext.jwt)['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'] == 'Teacher') {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }\n        });\n      } else if (subject == null && appContext.jwt != null) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => enroll(item, jwt_decode(appContext.jwt)['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name']),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }\n        }, \" Enroll \"));\n      } else if (subject.accepted == null) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }\n        }, \"Pending\");\n      } else if (subject.accepted == true) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }\n        }, \"Accepted\");\n      } else if (subject.accepted == false) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }\n        }, \"Denied\");\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingLeft: \"100px\",\n      paddingRight: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Subjects\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, \"Code\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, \"ECTS\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, \"Semester\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"Year\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"Students\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"Enroll\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, dataCopy.map(subject => {\n    var _subject$studentSubje;\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: subject.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, subject.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, subject.code), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, subject.ects), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, subject.semester), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }, subject.year), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, subject.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, (_subject$studentSubje = subject.studentSubjects) === null || _subject$studentSubje === void 0 ? void 0 : _subject$studentSubje.filter(ss => ss.accepted).length), enrollOption(subject));\n  }))));\n};\n\nexport default SubjectIndex;","map":{"version":3,"sources":["D:/icd0009-2019s/Exam2019s/exam-react/src/components/views/subject/SubjectIndex.tsx"],"names":["React","useState","useEffect","useContext","BaseCrudService","AppContext","jwt_decode","SubjectIndex","subjects","setSubjects","appContext","data","getEntities","then","dataCopy","Object","assign","length","enroll","subject","email","user","id","firstName","lastName","code","dto","appUser","accepted","createEntity","enrollOption","item","jwt","studentSubjects","find","s","undefined","paddingLeft","paddingRight","map","name","ects","semester","year","description","filter","ss"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { BaseCrudService } from \"../../../base/BaseCrudService\";\r\nimport { ISubject } from \"../../../domain/ISubject\";\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { cpus } from \"os\";\r\nimport { IStudentSubject } from \"../../../domain/IStudentSubjectDTO\";\r\nimport { IUser } from \"../../../domain/IUser\";\r\n\r\nconst SubjectIndex = () => {\r\n    const [subjects, setSubjects] = useState([] as ISubject[]);\r\n    const appContext = useContext(AppContext);\r\n    const data = async () => await BaseCrudService\r\n        .getEntities<ISubject>('subjects/getsubjects')\r\n        .then(data => setSubjects(data));\r\n\r\n    let dataCopy: ISubject[] = []\r\n    useEffect(() => {\r\n        data();\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        dataCopy = Object.assign(subjects)\r\n    }, [subjects.length]);\r\n\r\n    useEffect(() => {\r\n    }, [dataCopy.length])\r\n\r\n    async function enroll(subject: ISubject, email: string) {\r\n        var user: IUser = {email: email, id: 'x', firstName: '', lastName: '', code: ''};\r\n\r\n        let dto: IStudentSubject = {subject: subject, appUser: user, accepted: null, id: ''};\r\n\r\n        await BaseCrudService.createEntity<IStudentSubject>(dto, 'StudentSubject/PostStudentSubject');\r\n        data();\r\n    }\r\n\r\n    function enrollOption(item: ISubject) {\r\n\r\n        if (appContext.jwt == null) {\r\n            return (<td></td>);\r\n        }\r\n        else {\r\n            var subject = item.studentSubjects?.find(s => s != undefined && s!.appUser != undefined && s.appUser.email == jwt_decode<any>(appContext.jwt!)['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name']) ?? null;\r\n            if (jwt_decode<any>(appContext.jwt!)['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'] == 'Teacher') {\r\n                return (<td></td>)\r\n            }\r\n            else if (subject == null && appContext.jwt != null) {\r\n                return (<td>\r\n                    <button onClick={() => enroll(item, jwt_decode<any>(appContext.jwt!)['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'])} > Enroll </button>\r\n                </td>);\r\n            }\r\n            else if (subject!.accepted == null) {\r\n                return (<td>Pending</td>);\r\n            }\r\n            else if (subject!.accepted == true) {\r\n                return (<td>Accepted</td>);\r\n            }\r\n            else if (subject!.accepted == false) {\r\n                return (<td>Denied</td>);\r\n            }\r\n        }\r\n        return (<td></td>);\r\n    }\r\n\r\n    return (\r\n        <div style={{paddingLeft: \"100px\", paddingRight: \"100px\"}}>\r\n            <h1>Subjects</h1>\r\n            <table  className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            Name\r\n        </th>\r\n                        <th>\r\n                            Code\r\n        </th>\r\n                        <th>\r\n                            ECTS\r\n        </th>\r\n                        <th>\r\n                            Semester\r\n        </th>\r\n                        <th>\r\n                            Year\r\n        </th>\r\n                        <th>\r\n                            Description\r\n        </th>\r\n                        <th>\r\n                            Students\r\n        </th>\r\n                        <th>\r\n                            Enroll\r\n        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {dataCopy.map(subject => (\r\n\r\n                        <tr key={subject.id}>\r\n                            <td>\r\n                                {subject.name}\r\n                            </td>\r\n                            <td>\r\n                                {subject.code}\r\n                            </td>\r\n                            <td>\r\n                                {subject.ects}\r\n                            </td>\r\n                            <td>\r\n                                {subject.semester}\r\n                            </td>\r\n                            <td>\r\n                                {subject.year}\r\n                            </td>\r\n                            <td>\r\n                                {subject.description}\r\n                            </td>\r\n                            <td>\r\n                                {subject.studentSubjects?.filter(ss => ss.accepted).length}\r\n                            </td>\r\n                            {enrollOption(subject)}\r\n                        </tr>\r\n                    ))}\r\n\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubjectIndex;"]},"metadata":{},"sourceType":"module"}