{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\test-app\\\\exam-react\\\\src\\\\components\\\\views\\\\studentsubject\\\\Index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { BaseCrudService } from \"../../../base/BaseCrudService\";\nimport { useParams } from \"react-router-dom\";\n\nconst StudentSubjectIndex = () => {\n  const [item, setItem] = useState({});\n  let {\n    subjectid\n  } = useParams();\n  let studentSubjects = [];\n\n  const data = async () => {\n    await BaseCrudService.getEntities('studentsubject/getstudentsubjects/' + subjectid).then(data => studentSubjects = data);\n  };\n\n  useEffect(() => {\n    data();\n    console.log(studentSubjects);\n  }, [studentSubjects.length]);\n\n  function processRequest(item, status) {\n    item.accepted = status;\n\n    const callChange = async () => await BaseCrudService.updateEntity(item, 'studentsubject/putstudentsubject');\n\n    callChange();\n    data();\n  }\n\n  function enrollStatus(item) {\n    if (item.accepted != null || item.accepted != undefined) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, item.accepted ? 'Yes' : 'No');\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => processRequest(item, true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, \"Accept\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => processRequest(item, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"Deny\"));\n  }\n\n  function updateGrade() {\n    const callChange = async () => await BaseCrudService.updateEntity(item, 'studentsubject/putstudentsubject');\n\n    callChange();\n    data();\n  }\n\n  function handleChange(target) {\n    setItem({ ...item,\n      [target.name]: target.value\n    });\n  }\n\n  function grade(item2) {\n    setItem(item2);\n\n    if (!item.accepted) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, \"None\");\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"inlineBlock\",\n        whiteSpace: \"nowrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: item.grade,\n      onChange: e => handleChange(e.target),\n      min: \"0\",\n      max: \"5\",\n      className: \"form-control\",\n      name: \"grade\",\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => updateGrade(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Save\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Students list\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Student\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Subject\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Accepted\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"Grade\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, studentSubjects.map(ss => {\n    var _ss$appUser, _ss$appUser2, _ss$subject;\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: ss.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, ((_ss$appUser = ss.appUser) === null || _ss$appUser === void 0 ? void 0 : _ss$appUser.firstName) + \" \" + ((_ss$appUser2 = ss.appUser) === null || _ss$appUser2 === void 0 ? void 0 : _ss$appUser2.lastName)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, (_ss$subject = ss.subject) === null || _ss$subject === void 0 ? void 0 : _ss$subject.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, enrollStatus(ss)), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        display: \"inlineBlock\",\n        whiteSpace: \"nowrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, grade(ss)));\n  }))));\n};\n\nexport default StudentSubjectIndex;","map":{"version":3,"sources":["D:/Downloads/test-app/exam-react/src/components/views/studentsubject/Index.tsx"],"names":["React","useState","useEffect","BaseCrudService","useParams","StudentSubjectIndex","item","setItem","subjectid","studentSubjects","data","getEntities","then","console","log","length","processRequest","status","accepted","callChange","updateEntity","enrollStatus","undefined","updateGrade","handleChange","target","name","value","grade","item2","display","whiteSpace","e","map","ss","id","appUser","firstName","lastName","subject"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI;AAAEO,IAAAA;AAAF,MAAgBJ,SAAS,EAA7B;AACA,MAAIK,eAAkC,GAAG,EAAzC;;AACA,QAAMC,IAAI,GAAG,YAAY;AACrB,UAAMP,eAAe,CAChBQ,WADC,CAC4B,uCAAuCH,SADnE,EAEDI,IAFC,CAEIF,IAAI,IAAID,eAAe,GAAGC,IAF9B,CAAN;AAGH,GAJD;;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,IAAI;AACJG,IAAAA,OAAO,CAACC,GAAR,CAAYL,eAAZ;AACH,GAHQ,EAGN,CAACA,eAAe,CAACM,MAAjB,CAHM,CAAT;;AAKA,WAASC,cAAT,CAAwBV,IAAxB,EAA+CW,MAA/C,EAAgE;AAC5DX,IAAAA,IAAI,CAACY,QAAL,GAAgBD,MAAhB;;AACA,UAAME,UAAU,GAAG,YAAY,MAAMhB,eAAe,CAACiB,YAAhB,CAA8Cd,IAA9C,EAAoD,kCAApD,CAArC;;AACAa,IAAAA,UAAU;AACVT,IAAAA,IAAI;AACP;;AAED,WAASW,YAAT,CAAsBf,IAAtB,EAA6C;AAEzC,QAAIA,IAAI,CAACY,QAAL,IAAiB,IAAjB,IAAyBZ,IAAI,CAACY,QAAL,IAAiBI,SAA9C,EAAyD;AACrD,0BAAQ,0CAAGhB,IAAI,CAACY,QAAL,GAAgB,KAAhB,GAAwB,IAA3B,CAAR;AACH;;AAED,wBAAQ,uDACJ;AAAQ,MAAA,OAAO,EAAE,MAAMF,cAAc,CAACV,IAAD,EAAO,IAAP,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADI,eAEJ;AAAQ,MAAA,OAAO,EAAE,MAAMU,cAAc,CAACV,IAAD,EAAO,KAAP,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFI,CAAR;AAIH;;AAGD,WAASiB,WAAT,GAAuB;AACnB,UAAMJ,UAAU,GAAG,YAAY,MAAMhB,eAAe,CAACiB,YAAhB,CAA8Cd,IAA9C,EAAoD,kCAApD,CAArC;;AACAa,IAAAA,UAAU;AACVT,IAAAA,IAAI;AACP;;AAED,WAASc,YAAT,CAAsBC,MAAtB,EAA8D;AAC1DlB,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAACmB,MAAM,CAACC,IAAR,GAAeD,MAAM,CAACE;AAAjC,KAAD,CAAP;AACH;;AAED,WAASC,KAAT,CAAeC,KAAf,EAAuC;AACnCtB,IAAAA,OAAO,CAACsB,KAAD,CAAP;;AAEA,QAAI,CAACvB,IAAI,CAACY,QAAV,EAAoB;AAChB,0BAAQ,iDAAR;AACH;;AAED,wBAAQ,uDAEJ;AAAK,MAAA,KAAK,EAAE;AAACY,QAAAA,OAAO,EAAE,aAAV;AAAyBC,QAAAA,UAAU,EAAE;AAArC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,KAAK,EAAEzB,IAAI,CAACsB,KAAnB;AAA0B,MAAA,QAAQ,EAAGI,CAAD,IAAOR,YAAY,CAACQ,CAAC,CAACP,MAAH,CAAvD;AAAmE,MAAA,GAAG,EAAC,GAAvE;AAA2E,MAAA,GAAG,EAAC,GAA/E;AAAmF,MAAA,SAAS,EAAC,cAA7F;AAA4G,MAAA,IAAI,EAAC,OAAjH;AAAyH,MAAA,IAAI,EAAC,QAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAU,MAAA,OAAO,EAAE,MAAMF,WAAW,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAFI,CAAR;AASH;;AAED,sBAAQ,uDACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADI,eAGJ;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADJ,CADJ,eAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,eAAe,CAACwB,GAAhB,CAAoBC,EAAE;AAAA;;AAAA,wBAEnB;AAAI,MAAA,GAAG,EAAEA,EAAE,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,gBAAAD,EAAE,CAACE,OAAH,4DAAYC,SAAZ,IAAwB,GAAxB,oBAA8BH,EAAE,CAACE,OAAjC,iDAA8B,aAAYE,QAA1C,CADL,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACKJ,EAAE,CAACK,OADR,gDACK,YAAYb,IADjB,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKL,YAAY,CAACa,EAAD,CADjB,CAPJ,eAUI;AAAI,MAAA,KAAK,EAAE;AAAEJ,QAAAA,OAAO,EAAE,aAAX;AAA0BC,QAAAA,UAAU,EAAE;AAAtC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,KAAK,CAACM,EAAD,CADV,CAVJ,CAFmB;AAAA,GAAtB,CADL,CAlBJ,CAHI,CAAR;AA0CH,CAzGD;;AA2GA,eAAe7B,mBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { IStudentSubject } from \"../../../domain/IStudentSubjectDTO\";\r\nimport { BaseCrudService } from \"../../../base/BaseCrudService\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst StudentSubjectIndex = () => {\r\n    const [item, setItem] = useState({} as IStudentSubject);\r\n    let { subjectid } = useParams();\r\n    let studentSubjects: IStudentSubject[] = [];\r\n    const data = async () => {\r\n        await BaseCrudService\r\n            .getEntities<IStudentSubject>('studentsubject/getstudentsubjects/' + subjectid)\r\n            .then(data => studentSubjects = data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        data();\r\n        console.log(studentSubjects)\r\n    }, [studentSubjects.length]);\r\n\r\n    function processRequest(item: IStudentSubject, status: boolean) {\r\n        item.accepted = status;\r\n        const callChange = async () => await BaseCrudService.updateEntity<IStudentSubject>(item, 'studentsubject/putstudentsubject');\r\n        callChange();\r\n        data();\r\n    }\r\n\r\n    function enrollStatus(item: IStudentSubject) {\r\n\r\n        if (item.accepted != null || item.accepted != undefined) {\r\n            return (<>{item.accepted ? 'Yes' : 'No'}</>);\r\n        }\r\n\r\n        return (<>\r\n            <button onClick={() => processRequest(item, true)} >Accept</button>\r\n            <button onClick={() => processRequest(item, false)}>Deny</button>\r\n        </>);\r\n    }\r\n\r\n    \r\n    function updateGrade() {\r\n        const callChange = async () => await BaseCrudService.updateEntity<IStudentSubject>(item, 'studentsubject/putstudentsubject');\r\n        callChange();\r\n        data();\r\n    }\r\n\r\n    function handleChange(target: EventTarget & HTMLInputElement) {\r\n        setItem({ ...item, [target.name]: target.value });\r\n    }\r\n    \r\n    function grade(item2: IStudentSubject) {\r\n        setItem(item2);\r\n        \r\n        if (!item.accepted) {\r\n            return (<>None</>)\r\n        }\r\n\r\n        return (<>\r\n\r\n            <div style={{display: \"inlineBlock\", whiteSpace: \"nowrap\"}}>\r\n                <input value={item.grade} onChange={(e) => handleChange(e.target)} min=\"0\" max=\"5\" className=\"form-control\" name=\"grade\" type=\"number\" />\r\n                <button   onClick={() => updateGrade()}>Save</button>\r\n            </div>\r\n        </>\r\n        );\r\n\r\n    }\r\n\r\n    return (<>\r\n        <h1>Students list</h1>\r\n\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        Student\r\n        </th>\r\n                    <th>\r\n                        Subject\r\n        </th>\r\n                    <th>\r\n                        Accepted\r\n        </th>\r\n                    <th>\r\n                        Grade\r\n        </th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {studentSubjects.map(ss => (\r\n\r\n                    <tr key={ss.id}>\r\n                        <td>\r\n                            {ss.appUser?.firstName + \" \" + ss.appUser?.lastName}\r\n                        </td>\r\n                        <td>\r\n                            {ss.subject?.name}\r\n                        </td>\r\n                        <td>\r\n                            {enrollStatus(ss)}\r\n                        </td>\r\n                        <td style={{ display: \"inlineBlock\", whiteSpace: \"nowrap\" }}>\r\n                            {grade(ss)}\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    </>);\r\n}\r\n\r\nexport default StudentSubjectIndex;"]},"metadata":{},"sourceType":"module"}