{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\Kool_robert\\\\icd0009-2019s\\\\EXAM\\\\exam-react\\\\src\\\\components\\\\views\\\\course\\\\CourseIndex.tsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { BaseService } from \"../../../base/BaseService\";\nimport { AppContext } from \"../../../context/AppContext\";\nimport jwt_decode from \"jwt-decode\";\n\nconst CourseIndex = () => {\n  const [state, setState] = useState({\n    courses: [],\n    search: \"\",\n    coursesCopy: []\n  });\n  const appContext = useContext(AppContext);\n\n  const data = async () => await BaseService.getEntities('courses/getcourses').then(data => setState({ ...state,\n    courses: data,\n    coursesCopy: data\n  }));\n\n  useEffect(() => {\n    data();\n  }, []);\n  useEffect(() => {}, [state.search.length]);\n\n  async function enroll(course, email) {\n    var user = {\n      email: email,\n      id: 'x',\n      firstName: '',\n      lastName: ''\n    };\n    let dto = {\n      course: course,\n      appUser: user,\n      accepted: null,\n      id: ''\n    };\n    await BaseService.createEntity(dto, 'StudentCourse/PostStudentCourse', appContext.jwt);\n    data();\n  }\n\n  function update(target) {\n    setState({ ...state,\n      [target.name]: target.value\n    });\n  }\n\n  async function search() {\n    setState({ ...state,\n      coursesCopy: state.courses.filter(s => s.name.toLowerCase().includes(state.search.toLowerCase()) || s.code.toLowerCase().includes(state.search.toLowerCase()) || (s.user.firstName + s.user.lastName).toLowerCase().includes(state.search.toLowerCase()))\n    });\n  }\n\n  useEffect(() => {}, [state.coursesCopy.length]);\n\n  function enrollOption(item) {\n    if (appContext.jwt == null) {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      });\n    } else {\n      var _item$studentCourses$, _item$studentCourses;\n\n      var course = (_item$studentCourses$ = (_item$studentCourses = item.studentCourses) === null || _item$studentCourses === void 0 ? void 0 : _item$studentCourses.find(s => s != undefined && s.appUser != undefined && s.appUser.email == jwt_decode(appContext.jwt)['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'])) !== null && _item$studentCourses$ !== void 0 ? _item$studentCourses$ : null;\n\n      if (jwt_decode(appContext.jwt)['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'] == 'Teacher') {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }\n        });\n      } else if (course == null && appContext.jwt != null) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => enroll(item, jwt_decode(appContext.jwt)['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name']),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }\n        }, \" Enroll \"));\n      } else if (course.accepted == null) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }\n        }, \"Pending\");\n      } else if (course.accepted == true) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }\n        }, \"Accepted\");\n      } else if (course.accepted == false) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }\n        }, \"Denied\");\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingLeft: \"100px\",\n      paddingRight: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Courses\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control w-25\",\n    type: \"text\",\n    value: state.search,\n    name: \"search\",\n    onChange: e => update(e.target),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: () => search(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"Code\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Teacher\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, \"ECTS\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, \"Semester\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, \"Year\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, \"Students\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, \"Enrollment\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, state.coursesCopy.map(course => {\n    var _course$studentCourse;\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: course.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, course.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, course.code), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, course.user.firstName + \" \" + course.user.lastName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }, course.ects), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, course.semester), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    }, course.year), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, course.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, (_course$studentCourse = course.studentCourses) === null || _course$studentCourse === void 0 ? void 0 : _course$studentCourse.filter(ss => ss.accepted).length), enrollOption(course));\n  }))));\n};\n\nexport default CourseIndex;","map":{"version":3,"sources":["C:/Users/rober/Documents/Kool_robert/icd0009-2019s/EXAM/exam-react/src/components/views/course/CourseIndex.tsx"],"names":["React","useState","useEffect","useContext","BaseService","AppContext","jwt_decode","CourseIndex","state","setState","courses","search","coursesCopy","appContext","data","getEntities","then","length","enroll","course","email","user","id","firstName","lastName","dto","appUser","accepted","createEntity","jwt","update","target","name","value","filter","s","toLowerCase","includes","code","enrollOption","item","studentCourses","find","undefined","paddingLeft","paddingRight","e","map","ects","semester","year","description","ss"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { BaseService } from \"../../../base/BaseService\";\r\nimport { ICourse } from \"../../../domain/ICourse\";\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { IStudentCourse } from \"../../../domain/IStudentCourseDTO\";\r\nimport { IUser } from \"../../../domain/IUser\";\r\n\r\ninterface ICourseIndexState {\r\n    courses: ICourse[];\r\n    search: string;\r\n    coursesCopy: ICourse[];\r\n}\r\n\r\nconst CourseIndex = () => {\r\n    const [state, setState] = useState({courses: [], search: \"\", coursesCopy: []} as ICourseIndexState);\r\n    const appContext = useContext(AppContext);\r\n    const data = async () => await BaseService\r\n        .getEntities<ICourse>('courses/getcourses')\r\n        .then(data => setState({...state, courses: data, coursesCopy: data}));\r\n\r\n    useEffect(() => {\r\n        data()\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [state.search.length])\r\n\r\n    async function enroll(course: ICourse, email: string) {\r\n        var user: IUser = {email: email, id: 'x', firstName: '', lastName: ''};\r\n\r\n        let dto: IStudentCourse = {course: course, appUser: user, accepted: null, id: ''};\r\n\r\n        await BaseService.createEntity<IStudentCourse>(dto, 'StudentCourse/PostStudentCourse', appContext.jwt!);\r\n        data();\r\n    }\r\n\r\n    function update(target: EventTarget & HTMLInputElement) {\r\n        setState({...state, [target.name]: target.value})\r\n    }\r\n\r\n     async function search() {\r\n        setState({...state, coursesCopy: state.courses.filter(s => s.name.toLowerCase().includes(state.search.toLowerCase())\r\n            || s.code.toLowerCase().includes(state.search.toLowerCase())\r\n            || (s.user!.firstName + s.user!.lastName).toLowerCase().includes(state.search.toLowerCase()))})\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    }, [state.coursesCopy.length]);\r\n\r\n    function enrollOption(item: ICourse) {\r\n\r\n        if (appContext.jwt == null) {\r\n            return (<td></td>);\r\n        }\r\n        else {\r\n            var course = item.studentCourses?.find(s => s != undefined && s!.appUser != undefined && s.appUser.email == jwt_decode<any>(appContext.jwt!)['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name']) ?? null;\r\n            if (jwt_decode<any>(appContext.jwt!)['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'] == 'Teacher') {\r\n                return (<td></td>)\r\n            }\r\n            else if (course == null && appContext.jwt != null) {\r\n                return (<td>\r\n                    <button onClick={() => enroll(item, jwt_decode<any>(appContext.jwt!)['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'])} > Enroll </button>\r\n                </td>);\r\n            }\r\n            else if (course!.accepted == null) {\r\n                return (<td>Pending</td>);\r\n            }\r\n            else if (course!.accepted == true) {\r\n                return (<td>Accepted</td>);\r\n            }\r\n            else if (course!.accepted == false) {\r\n                return (<td>Denied</td>);\r\n            }\r\n        }\r\n        return (<td></td>);\r\n    }\r\n\r\n    return (\r\n        <div style={{paddingLeft: \"100px\", paddingRight: \"100px\"}}>\r\n            <h1>Courses</h1>\r\n\r\n            <input className=\"form-control w-25\" type=\"text\" value={state.search} name=\"search\" onChange={(e) => update(e.target)} />\r\n            <button className=\"btn btn-primary\" onClick={() => search()} >Search</button>\r\n\r\n            <table  className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            Name\r\n        </th>\r\n                        <th>\r\n                            Code\r\n        </th>\r\n        <th>\r\n                            Teacher\r\n        </th>\r\n                        <th>\r\n                            ECTS\r\n        </th>\r\n                        <th>\r\n                            Semester\r\n        </th>\r\n                        <th>\r\n                            Year\r\n        </th>\r\n                        <th>\r\n                            Description\r\n        </th>\r\n                        <th>\r\n                            Students\r\n        </th>\r\n                        <th>\r\n                            Enrollment\r\n        </th>   \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {state.coursesCopy.map(course => (\r\n\r\n                        <tr key={course.id}>\r\n                            <td>\r\n                                {course.name}\r\n                            </td>\r\n                            <td>\r\n                                {course.code}\r\n                            </td>\r\n                            <td>\r\n                                {(course.user!.firstName + \" \" + course.user!.lastName)}\r\n                            </td>\r\n                            <td>\r\n                                {course.ects}\r\n                            </td>\r\n                            <td>\r\n                                {course.semester}\r\n                            </td>\r\n                            <td>\r\n                                {course.year}\r\n                            </td>\r\n                            <td>\r\n                                {course.description}\r\n                            </td>\r\n                            <td>\r\n                                {course.studentCourses?.filter(ss => ss.accepted).length}\r\n                            </td>\r\n                            {enrollOption(course)}\r\n                        </tr>\r\n                    ))}\r\n\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseIndex;"]},"metadata":{},"sourceType":"module"}