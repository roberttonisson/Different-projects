{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\Kool_robert\\\\icd0009-2019s\\\\EXAM\\\\exam-react\\\\src\\\\components\\\\views\\\\studentsubject\\\\Index.tsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { BaseCrudService } from \"../../../base/BaseCrudService\";\nimport { useParams } from \"react-router-dom\";\nimport Grade from \"./grade\";\nimport { AppContext } from \"../../../context/AppContext\";\n\nconst StudentSubjectIndex = () => {\n  const [state, setItem] = useState({\n    studentSubjects: [],\n    studentSubjectsCopy: [],\n    search: ''\n  });\n  let {\n    subjectid\n  } = useParams();\n  const appContext = useContext(AppContext);\n\n  const data = async () => {\n    await BaseCrudService.getEntities('studentsubject/getstudentsubjects/' + subjectid, appContext.jwt).then(data => {\n      setItem({ ...state,\n        studentSubjects: data,\n        studentSubjectsCopy: data\n      });\n    });\n  };\n\n  useEffect(() => {\n    data();\n  }, []);\n\n  async function processRequest(item, status) {\n    item.accepted = status;\n    await BaseCrudService.updateEntity(item, 'studentsubject/edits', appContext.jwt);\n    data();\n  }\n\n  function enrollStatus(item) {\n    if (item.accepted != null || item.accepted != undefined) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, item.accepted ? 'Yes' : 'No');\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => processRequest(item, true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"Accept\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => processRequest(item, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"Deny\"));\n  }\n\n  function ifGrade(item) {\n    if (item.accepted) {\n      return /*#__PURE__*/React.createElement(Grade, {\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n  function averageGrade() {\n    let sum = 0;\n    let studentsubjects = state.studentSubjectsCopy.filter(s => s.grade != null);\n    studentsubjects.forEach(element => {\n      sum += parseFloat(element.grade);\n    });\n    return sum / studentsubjects.length;\n  }\n\n  function handleUpdate(target) {\n    setItem({ ...state,\n      [target.name]: target.value\n    });\n  }\n\n  async function handleSearch() {\n    setItem({ ...state,\n      studentSubjectsCopy: state.studentSubjects.filter(s => (s.appUser.firstName + s.appUser.lastName).toLowerCase().includes(state.search.toLowerCase()))\n    });\n  }\n\n  useEffect(() => {}, [state.studentSubjectsCopy.length]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Grade for\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: state.search,\n    name: \"search\",\n    onChange: e => handleUpdate(e.target),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleSearch(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"Student\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Subject\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Accepted\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"Grade\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, state.studentSubjectsCopy.map((ss, index) => {\n    var _ss$appUser, _ss$appUser2, _ss$subject;\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: ss.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, ((_ss$appUser = ss.appUser) === null || _ss$appUser === void 0 ? void 0 : _ss$appUser.firstName) + \" \" + ((_ss$appUser2 = ss.appUser) === null || _ss$appUser2 === void 0 ? void 0 : _ss$appUser2.lastName)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, (_ss$subject = ss.subject) === null || _ss$subject === void 0 ? void 0 : _ss$subject.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, enrollStatus(ss)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, ifGrade(ss)));\n  }), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 3,\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, \"Average: \")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, \" \", averageGrade(), \" out of 5\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 3,\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, \"Not graded students count: \")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, \" \", state.studentSubjectsCopy.filter(ss => ss.grade == null).length, \" (\", state.studentSubjectsCopy.filter(ss => ss.grade == null).length / state.studentSubjectsCopy.length * 100, \"%)\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 3,\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, \"Passed students: \")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, \" \", state.studentSubjectsCopy.filter(ss => ss.grade != null && parseInt(ss.grade) > 0).length, \" (\", state.studentSubjectsCopy.filter(ss => ss.grade != null && parseInt(ss.grade) > 0).length / state.studentSubjectsCopy.length * 100, \"%)\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 3,\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, \"Failed students: \")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, state.studentSubjectsCopy.filter(ss => ss.grade != null && parseInt(ss.grade) == 0).length, \" (\", state.studentSubjectsCopy.filter(ss => ss.grade != null && parseInt(ss.grade) == 0).length / state.studentSubjectsCopy.length * 100, \"%)\"))))));\n};\n\nexport default StudentSubjectIndex;","map":{"version":3,"sources":["C:/Users/rober/Documents/Kool_robert/icd0009-2019s/EXAM/exam-react/src/components/views/studentsubject/Index.tsx"],"names":["React","useState","useEffect","useContext","BaseCrudService","useParams","Grade","AppContext","StudentSubjectIndex","state","setItem","studentSubjects","studentSubjectsCopy","search","subjectid","appContext","data","getEntities","jwt","then","processRequest","item","status","accepted","updateEntity","enrollStatus","undefined","ifGrade","averageGrade","sum","studentsubjects","filter","s","grade","forEach","element","parseFloat","length","handleUpdate","target","name","value","handleSearch","appUser","firstName","lastName","toLowerCase","includes","e","map","ss","index","id","subject","textAlign","parseInt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { IStudentSubject } from \"../../../domain/IStudentSubjectDTO\";\r\nimport { BaseCrudService } from \"../../../base/BaseCrudService\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport Grade from \"./grade\";\r\nimport { AppContext } from \"../../../context/AppContext\";\r\n\r\ninterface IState {\r\n    studentSubjects: IStudentSubject[];\r\n    studentSubjectsCopy: IStudentSubject[];\r\n    search: string;\r\n}\r\n\r\nconst StudentSubjectIndex = () => {\r\n    const [state, setItem] = useState({ studentSubjects: [], studentSubjectsCopy: [], search: '' } as IState);\r\n    let { subjectid } = useParams();\r\n    const appContext = useContext(AppContext);\r\n    const data = async () => {\r\n        await BaseCrudService\r\n            .getEntities<IStudentSubject>('studentsubject/getstudentsubjects/' + subjectid, appContext.jwt!)\r\n            .then(data => {\r\n                setItem({ ...state, studentSubjects: data, studentSubjectsCopy: data });\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        data()\r\n    }, []);\r\n\r\n    async function processRequest(item: IStudentSubject, status: boolean) {\r\n        item.accepted = status;\r\n        await BaseCrudService.updateEntity<IStudentSubject>(item, 'studentsubject/edits', appContext.jwt!);\r\n        data();\r\n    }\r\n\r\n    function enrollStatus(item: IStudentSubject) {\r\n\r\n        if (item.accepted != null || item.accepted != undefined) {\r\n            return (<>{item.accepted ? 'Yes' : 'No'}</>);\r\n        }\r\n\r\n        return (<>\r\n            <button onClick={() => processRequest(item, true)} >Accept</button>\r\n            <button onClick={() => processRequest(item, false)}>Deny</button>\r\n        </>);\r\n    }\r\n\r\n    function ifGrade(item: IStudentSubject) {\r\n        if (item.accepted) {\r\n            return <Grade item={item} />\r\n        }\r\n\r\n        return (<></>);\r\n    }\r\n\r\n    function averageGrade() {\r\n        let sum = 0;\r\n        let studentsubjects = state.studentSubjectsCopy.filter(s => s.grade != null);\r\n        studentsubjects.forEach(element => {\r\n            sum += parseFloat(element.grade!)\r\n        });\r\n\r\n        return sum / studentsubjects.length;\r\n    }\r\n\r\n    function handleUpdate(target: EventTarget & HTMLInputElement) {\r\n        setItem({ ...state, [target.name]: target.value })\r\n    }\r\n\r\n    async function handleSearch() {\r\n        setItem({ ...state, studentSubjectsCopy: state.studentSubjects.filter(s => (s.appUser!.firstName + s.appUser!.lastName).toLowerCase().includes(state.search.toLowerCase())) })\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    }, [state.studentSubjectsCopy.length])\r\n\r\n    return (<>\r\n        <h1>Grade for</h1>\r\n\r\n        <input type=\"text\" value={state.search} name=\"search\" onChange={(e) => handleUpdate(e.target)} />\r\n        <button onClick={() => handleSearch()} >Search</button>\r\n\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        Student\r\n        </th>\r\n                    <th>\r\n                        Subject\r\n        </th>\r\n                    <th>\r\n                        Accepted\r\n        </th>\r\n                    <th>\r\n                        Grade\r\n        </th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {state.studentSubjectsCopy.map((ss, index) => (\r\n\r\n                    <tr key={ss.id}>\r\n                        <td>\r\n                            {ss.appUser?.firstName + \" \" + ss.appUser?.lastName}\r\n                        </td>\r\n                        <td>\r\n                            {ss.subject?.name}\r\n                        </td>\r\n                        <td>\r\n                            {enrollStatus(ss)}\r\n                        </td>\r\n                        <td>\r\n                            {ifGrade(ss)}\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n                <tr>\r\n                    <td colSpan={3} style={{ textAlign: \"right\" }}>\r\n                        <b>Average: </b>\r\n                    </td>\r\n                    <td>\r\n                        <b> {averageGrade()} out of 5</b>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan={3} style={{ textAlign: \"right\" }}>\r\n                        <b>Not graded students count: </b>\r\n                    </td>\r\n                    <td>\r\n                        <b> {state.studentSubjectsCopy.filter(ss => ss.grade == null).length} ({state.studentSubjectsCopy.filter(ss => ss.grade == null).length / state.studentSubjectsCopy.length * 100}%)</b>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan={3} style={{ textAlign: \"right\" }}>\r\n                        <b>Passed students: </b>\r\n                    </td>\r\n                    <td>\r\n                        <b> {state.studentSubjectsCopy.filter(ss => ss.grade != null && parseInt(ss.grade) > 0).length} ({state.studentSubjectsCopy.filter(ss => ss.grade != null && parseInt(ss.grade) > 0).length / state.studentSubjectsCopy.length * 100}%)</b>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan={3} style={{ textAlign: \"right\" }}>\r\n                        <b>Failed students: </b>\r\n                    </td>\r\n                    <td>\r\n                        <b>{state.studentSubjectsCopy.filter(ss => ss.grade != null && parseInt(ss.grade) == 0).length} ({state.studentSubjectsCopy.filter(ss => ss.grade != null && parseInt(ss.grade) == 0).length / state.studentSubjectsCopy.length * 100}%)</b>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </>);\r\n}\r\n\r\nexport default StudentSubjectIndex;"]},"metadata":{},"sourceType":"module"}