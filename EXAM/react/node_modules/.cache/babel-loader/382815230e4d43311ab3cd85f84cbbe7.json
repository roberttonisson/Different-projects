{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\test-app\\\\exam-react\\\\src\\\\components\\\\views\\\\subject\\\\SubjectIndex.tsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { BaseCrudService } from \"../../../base/BaseCrudService\";\nimport { AppContext } from \"../../../context/AppContext\";\nimport jwt_decode from \"jwt-decode\";\n\nconst SubjectIndex = () => {\n  const [subjects, setSubjects] = useState([]);\n  const appContext = useContext(AppContext);\n\n  const data = async () => await BaseCrudService.getEntities('subjects').then(data => setSubjects(data));\n\n  useEffect(() => {\n    data();\n  }, [subjects.length]);\n\n  const deleteDrink = async id => {\n    await BaseCrudService.deleteEntity(id, 'subjects');\n    data();\n  };\n\n  function enrollOption(item) {\n    if (appContext.jwt == null) {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      });\n    } else {\n      var _item$studentSubjects, _item$studentSubjects2;\n\n      var subject = (_item$studentSubjects = (_item$studentSubjects2 = item.studentSubjects) === null || _item$studentSubjects2 === void 0 ? void 0 : _item$studentSubjects2.find(s => s != undefined && s.appUser != undefined && s.appUser.email == jwt_decode(appContext.jwt)['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'])) !== null && _item$studentSubjects !== void 0 ? _item$studentSubjects : null;\n\n      if (jwt_decode(appContext.jwt)['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'] == 'Teacher') {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }\n        });\n      } else if (subject == null && appContext.jwt != null) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }\n        }, \" Enroll \"));\n      } else if (subject.accepted == null) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }\n        }, \"Pending\");\n      } else if (subject.accepted == true) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }\n        }, \"Accepted\");\n      } else if (subject.accepted == false) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }\n        }, \"Denied\");\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Subjects\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"Code\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \"ECTS\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"Semester\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"Year\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"Students\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, \"Enroll\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, subjects.map(subject => /*#__PURE__*/React.createElement(\"tr\", {\n    key: subject.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, subject.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, subject.code), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, subject.ects), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, subject.semester), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, subject.year), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, subject.description), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, subject.studentSubjects.length), enrollOption(subject))))));\n};\n\nexport default SubjectIndex;","map":{"version":3,"sources":["D:/Downloads/test-app/exam-react/src/components/views/subject/SubjectIndex.tsx"],"names":["React","useState","useEffect","useContext","BaseCrudService","AppContext","jwt_decode","SubjectIndex","subjects","setSubjects","appContext","data","getEntities","then","length","deleteDrink","id","deleteEntity","enrollOption","item","jwt","subject","studentSubjects","find","s","undefined","appUser","email","accepted","map","name","code","ects","semester","year","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,eAAT,QAAgC,+BAAhC;AAEA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAGA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMS,UAAU,GAAGP,UAAU,CAACE,UAAD,CAA7B;;AACA,QAAMM,IAAI,GAAG,YAAY,MAAMP,eAAe,CACzCQ,WAD0B,CACJ,UADI,EAE1BC,IAF0B,CAErBF,IAAI,IAAIF,WAAW,CAACE,IAAD,CAFE,CAA/B;;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,IAAI;AACP,GAFQ,EAEN,CAACH,QAAQ,CAACM,MAAV,CAFM,CAAT;;AAIA,QAAMC,WAAW,GAAG,MAAOC,EAAP,IAAsB;AACtC,UAAMZ,eAAe,CAACa,YAAhB,CAA6BD,EAA7B,EAAiC,UAAjC,CAAN;AACAL,IAAAA,IAAI;AACP,GAHD;;AAKA,WAASO,YAAT,CAAsBC,IAAtB,EAAsC;AAElC,QAAIT,UAAU,CAACU,GAAX,IAAkB,IAAtB,EAA4B;AACxB,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH,KAFD,MAGK;AAAA;;AACD,UAAIC,OAAO,sDAAGF,IAAI,CAACG,eAAR,2DAAG,uBAAsBC,IAAtB,CAA2BC,CAAC,IAAIA,CAAC,IAAIC,SAAL,IAAkBD,CAAC,CAAEE,OAAH,IAAcD,SAAhC,IAA6CD,CAAC,CAACE,OAAF,CAAUC,KAAV,IAAmBrB,UAAU,CAAMI,UAAU,CAACU,GAAjB,CAAV,CAAiC,4DAAjC,CAAhG,CAAH,yEAAsM,IAAjN;;AACA,UAAId,UAAU,CAAMI,UAAU,CAACU,GAAjB,CAAV,CAAiC,8DAAjC,KAAoG,SAAxG,EAAmH;AAC/G,4BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,OAFD,MAGK,IAAIC,OAAO,IAAI,IAAX,IAAmBX,UAAU,CAACU,GAAX,IAAkB,IAAzC,EAA+C;AAChD,4BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADI,CAAR;AAGH,OAJI,MAKA,IAAIC,OAAO,CAAEO,QAAT,IAAqB,IAAzB,EAA+B;AAChC,4BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAR;AACH,OAFI,MAGA,IAAIP,OAAO,CAAEO,QAAT,IAAqB,IAAzB,EAA+B;AAChC,4BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAR;AACH,OAFI,MAGA,IAAIP,OAAO,CAAEO,QAAT,IAAqB,KAAzB,EAAgC;AACjC,4BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAR;AACH;AACJ;;AACD,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH;;AAED,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhBJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ,CADJ,CADJ,eA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpB,QAAQ,CAACqB,GAAT,CAAaR,OAAO,iBAEjB;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,OAAO,CAACS,IADb,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,OAAO,CAACU,IADb,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,OAAO,CAACW,IADb,CAPJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,OAAO,CAACY,QADb,CAVJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,OAAO,CAACa,IADb,CAbJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,OAAO,CAACc,WADb,CAhBJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,OAAO,CAACC,eAAR,CAAyBR,MAD9B,CAnBJ,EAsBKI,YAAY,CAACG,OAAD,CAtBjB,CAFH,CADL,CA7BJ,CAFJ,CADJ;AAkEH,CA9GD;;AAgHA,eAAed,YAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { BaseCrudService } from \"../../../base/BaseCrudService\";\r\nimport { ISubject } from \"../../../domain/ISubject\";\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { cpus } from \"os\";\r\n\r\nconst SubjectIndex = () => {\r\n    const [subjects, setSubjects] = useState([] as ISubject[]);\r\n    const appContext = useContext(AppContext);\r\n    const data = async () => await BaseCrudService\r\n        .getEntities<ISubject>('subjects')\r\n        .then(data => setSubjects(data));\r\n\r\n    useEffect(() => {\r\n        data();\r\n    }, [subjects.length]);\r\n\r\n    const deleteDrink = async (id: string) => {\r\n        await BaseCrudService.deleteEntity(id, 'subjects');\r\n        data();\r\n    }\r\n\r\n    function enrollOption(item: ISubject) {\r\n\r\n        if (appContext.jwt == null) {\r\n            return (<td></td>);\r\n        }\r\n        else {\r\n            var subject = item.studentSubjects?.find(s => s != undefined && s!.appUser != undefined && s.appUser.email == jwt_decode<any>(appContext.jwt!)['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name']) ?? null;\r\n            if (jwt_decode<any>(appContext.jwt!)['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'] == 'Teacher') {\r\n                return (<td></td>)\r\n            }\r\n            else if (subject == null && appContext.jwt != null) {\r\n                return (<td>\r\n                    <a > Enroll </a>\r\n                </td>);\r\n            }\r\n            else if (subject!.accepted == null) {\r\n                return (<td>Pending</td>);\r\n            }\r\n            else if (subject!.accepted == true) {\r\n                return (<td>Accepted</td>);\r\n            }\r\n            else if (subject!.accepted == false) {\r\n                return (<td>Denied</td>);\r\n            }\r\n        }\r\n        return (<td></td>);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Subjects</h1>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            Name\r\n        </th>\r\n                        <th>\r\n                            Code\r\n        </th>\r\n                        <th>\r\n                            ECTS\r\n        </th>\r\n                        <th>\r\n                            Semester\r\n        </th>\r\n                        <th>\r\n                            Year\r\n        </th>\r\n                        <th>\r\n                            Description\r\n        </th>\r\n                        <th>\r\n                            Students\r\n        </th>\r\n                        <th>\r\n                            Enroll\r\n        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {subjects.map(subject => (\r\n\r\n                        <tr key={subject.id}>\r\n                            <td>\r\n                                {subject.name}\r\n                            </td>\r\n                            <td>\r\n                                {subject.code}\r\n                            </td>\r\n                            <td>\r\n                                {subject.ects}\r\n                            </td>\r\n                            <td>\r\n                                {subject.semester}\r\n                            </td>\r\n                            <td>\r\n                                {subject.year}\r\n                            </td>\r\n                            <td>\r\n                                {subject.description}\r\n                            </td>\r\n                            <td>\r\n                                {subject.studentSubjects!.length}\r\n                            </td>\r\n                            {enrollOption(subject)}\r\n                        </tr>\r\n                    ))}\r\n\r\n                </tbody>\r\n            </table>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SubjectIndex;"]},"metadata":{},"sourceType":"module"}